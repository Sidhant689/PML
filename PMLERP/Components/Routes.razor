@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<CascadingAuthenticationState>
    @if (!_isInitialized)
    {
        <text>Loading...</text> <!-- Or a splash screen -->
    }
    else
    {
        <Router AppAssembly="@typeof(App).Assembly">
            <Found Context="routeData">
                <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(Layout.MainLayout)">
                    <NotAuthorized>
                        @if (!_isAuthenticated)
                        {
                            <RedirectToLogin />
                        }
                        else
                        {
                            <p class="not-authorized">
                                You are not authorized to access this resource.
                            </p>
                        }
                    </NotAuthorized>
                </AuthorizeRouteView>
            </Found>
            <NotFound>
                <LayoutView Layout="@typeof(Layout.MainLayout)">
                    <p>Sorry, there's nothing at this address.</p>
                </LayoutView>
            </NotFound>
        </Router>
    }
</CascadingAuthenticationState>

@code {
    private bool _isInitialized = false;
    private bool _isAuthenticated = false;

    protected override async Task OnInitializedAsync()
    {
        _isAuthenticated = await AuthService.IsUserAuthenticatedAsync();

        var path = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);

        if (!_isAuthenticated &&
            !path.StartsWith("login", StringComparison.OrdinalIgnoreCase) &&
            !path.StartsWith("register", StringComparison.OrdinalIgnoreCase))
        {
            NavigationManager.NavigateTo("login", true);
            return;
        }

        if (_isAuthenticated &&
            (path.StartsWith("login", StringComparison.OrdinalIgnoreCase) ||
             path.StartsWith("register", StringComparison.OrdinalIgnoreCase)))
        {
            NavigationManager.NavigateTo("/", true);
            return;
        }

        _isInitialized = true;
    }
}


<style>
    .not-authorized {
        margin: 20px;
        padding: 20px;
        background-color: #ffeeee;
        border: 1px solid #ffcccc;
        border-radius: 5px;
        color: #cc0000;
    }
</style>